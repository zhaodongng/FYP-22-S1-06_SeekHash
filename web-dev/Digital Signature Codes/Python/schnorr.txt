from schnorr_lib import sha256, schnorr_sign, schnorr_musig_sign, schnorr_musig2_sign
# Signature
try:
	M = sha256(msg.encode())
	X = None
if not (musig1 or musig2):
		if i < 0 or i >= len(users):
			raise RuntimeError("Index is out of range")
		sig = schnorr_sign(M, users[i]["privateKey"])
	elif musig1:
		sig, X = schnorr_musig_sign(M, users)
	elif musig2:
		sig, X = schnorr_musig2_sign(M, users)
	print("> Message =", M.hex())
	print("> Signature =", sig.hex())
	if X is not None:
		print("> Public aggregate =", X.hex())
except Exception as e:
	print_fails("[e] Exception:", e)
	sys.exit(2)